name: Lint

on:
  push:
    branches:
    - main
    - develop
    
  pull_request:

env:
  CI: true
  FORCE_COLOR: 2

jobs:

    solidity:
      runs-on: ubuntu-latest

      steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install node.js dependencies
        id: nodejs:install
        run: npm ci

      - name: Run formatter check on *.sol and *.json
        id: format:check
        run: npm run format:check

      - name: run linter check on *.sol file
        id: linter:hint
        run: npm run-script hint
  
    commits:
      runs-on: ubuntu-latest

      steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run commitlint
        uses: wagoid/commitlint-github-action@v2

    brownie:
      runs-on: ubuntu-latest

      steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set pip cache directory path
        id: pip-cache-dir-path
        run: |
            echo "::set-output name=dir::$(pip cache dir)"

      - name: Restore pip cache
        uses: actions/cache@v2
        id: pip-cache
        with:
          path: |
            ${{ steps.pip-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
            ${{ runner.os }}-pip-

      - name: Install python dependencies
        run: pip install -r requirements-dev.txt

      - name: Run black
        id: format:black
        run: black --check --include "(tests|scripts)" .

# TODO: Add Slither Static Analyzer
